CREATE TABLE students (
id INT PRIMARY KEY AUTO_INCREMENT,
studentCode INT,
firstName VARCHAR(50) NOT NULL,
middleName VARCHAR(50),
lastName VARCHAR(50) NOT NULL,
phone INT
);

CREATE TABLE faculty (
id INT PRIMARY KEY AUTO_INCREMENT,
firstName VARCHAR(50) NOT NULL,
middleName VARCHAR(50),
lastName VARCHAR(50) NOT NULL,
phone INT
);

CREATE TABLE courses (
id INT PRIMARY KEY AUTO_INCREMENT,
courseCode VARCHAR(15) NOT NULL,
courseName VARCHAR(255) NOT NULL,
units INT NOT NULL
);


CREATE TABLE yearLevels (
id INT PRIMARY KEY AUTO_INCREMENT,
year INT NOT NULL
);

CREATE TABLE semesters (
id INT PRIMARY KEY AUTO_INCREMENT,
semester INT NOT NULL
);

CREATE TABLE schoolYears (
id INT PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(255) NOT NULL
);

CREATE TABLE classes (
id INT PRIMARY KEY AUTO_INCREMENT,
facultyId INT NOT NULL,
FOREIGN KEY (facultyId) REFERENCES faculty(id) ON DELETE CASCADE
);

CREATE TABLE enrollment (
id INT PRIMARY KEY AUTO_INCREMENT,
courseId INT NOT NULL,
yearLevelId INT NOT NULL,
semesterId INT NOT NULL,
schoolYearId INT NOT NULL,
FOREIGN KEY (courseId) REFERENCES courses(id) ON DELETE CASCADE,
FOREIGN KEY (yearLevelId) REFERENCES yearLevels(id) ON DELETE CASCADE,
FOREIGN KEY (semesterId) REFERENCES semesters(id) ON DELETE CASCADE,
FOREIGN KEY (schoolYearId) REFERENCES schoolYears(id) ON DELETE CASCADE
);

CREATE TABLE enrollmentDetails (
id INT PRIMARY KEY AUTO_INCREMENT,
enrollmentId INT NOT NULL,
classId INT NOT NULL,
FOREIGN KEY (classId) REFERENCES class(id) ON DELETE CASCADE
);


CREATE TABLE users (
id INT PRIMARY KEY AUTO_INCREMENT,
username VARCHAR(50) NOT NULL UNIQUE,
password_hash VARCHAR(64) NOT NULL
);

INSERT INTO users (username, password_hash) VALUES ('admin', MD5('admin'));

